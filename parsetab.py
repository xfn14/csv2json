
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "COMMENT DEF EOL EXP STAT TEXT aspas id retoStatement : ExpressionExpression : '*' '*' id '=' EqualEqual : aspasEqual : retoExpression : STAT ':' TEXT '{' Expression '}'Expression : EXP ':' TEXT '{' Expression '}'Expression : COMMENTExpression : DEFExpression : '%' '%' id"
    
_lr_action_items = {'*':([0,3,18,19,],[3,9,3,3,]),'STAT':([0,18,19,],[4,4,4,]),'EXP':([0,18,19,],[5,5,5,]),'COMMENT':([0,18,19,],[6,6,6,]),'DEF':([0,18,19,],[7,7,7,]),'%':([0,8,18,19,],[8,12,8,8,]),'$end':([1,2,6,7,16,20,21,22,25,26,],[0,-1,-7,-8,-9,-2,-3,-4,-5,-6,]),':':([4,5,],[10,11,]),'}':([6,7,16,20,21,22,23,24,25,26,],[-7,-8,-9,-2,-3,-4,25,26,-5,-6,]),'id':([9,12,],[13,16,]),'TEXT':([10,11,],[14,15,]),'=':([13,],[17,]),'{':([14,15,],[18,19,]),'aspas':([17,],[21,]),'reto':([17,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Statement':([0,],[1,]),'Expression':([0,18,19,],[2,23,24,]),'Equal':([17,],[20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Statement","S'",1,None,None,None),
  ('Statement -> Expression','Statement',1,'p_Statement_Simples','test_sin.py',8),
  ('Expression -> * * id = Equal','Expression',5,'p_Expression_EQUALS','test_sin.py',20),
  ('Equal -> aspas','Equal',1,'p_Equal_aspas','test_sin.py',25),
  ('Equal -> reto','Equal',1,'p_Equal_reto','test_sin.py',28),
  ('Expression -> STAT : TEXT { Expression }','Expression',6,'p_Expression_STAT','test_sin.py',55),
  ('Expression -> EXP : TEXT { Expression }','Expression',6,'p_Expression_EXP','test_sin.py',60),
  ('Expression -> COMMENT','Expression',1,'p_Expression_COMMENT','test_sin.py',65),
  ('Expression -> DEF','Expression',1,'p_Expression_DEF','test_sin.py',69),
  ('Expression -> % % id','Expression',3,'p_Expression_LEX','test_sin.py',73),
]
